import { randomBytes, scrypt } from "crypto";
import { promisify } from "util";
import Account from "../../models/Account";

// Chuyá»ƒn Ä‘á»•i scrypt sang dáº¡ng hÃ m async Ä‘á»ƒ dá»… sá»­ dá»¥ng
const scryptAsync = promisify(scrypt);

// ðŸ“Œ HÃ m mÃ£ hÃ³a máº­t kháº©u
export async function hashPassword(password: string) {
  const salt = randomBytes(16).toString("hex"); // Táº¡o salt ngáº«u nhiÃªn
  const derivedKey = (await scryptAsync(password, salt, 64)) as Buffer;

  return { derivedKey, salt };
}

// ðŸ“Œ HÃ m xÃ¡c thá»±c máº­t kháº©u
export async function verifyPassword(
  enteredPassword: string,
  { stored, salt }: any
) {
  // Táº¡o hash tá»« máº­t kháº©u nháº­p vÃ o Ä‘á»ƒ so sÃ¡nh
  const derivedKey = (await scryptAsync(enteredPassword, salt, 64)) as Buffer;

  // So sÃ¡nh káº¿t quáº£
  return derivedKey.toString("hex") === stored;
}
